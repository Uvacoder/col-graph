---
import { getShortestPaths } from '@/db/getShortestPaths';
import { pluralise } from '@/utils/pluralise';

type Props = Awaited<ReturnType<typeof getShortestPaths>>;

const { nodes, edges, numPaths, degsOfSeparation } = Astro.props;
---

<p>
  {
    nodes.length > 0 ? (
      degsOfSeparation == 1 ? (
        'Colosally, these drivers were teammates!'
      ) : (
        <span>
          Found <strong>{pluralise('path', numPaths)}</strong> with
          <strong>{pluralise('degree', degsOfSeparation)}</strong>
          of separation.
        </span>
      )
    ) : (
      'No paths were found!'
    )
  }
</p>
{
  nodes.length > 0 && (
    <>
      <vis-graph
        data-nodes={JSON.stringify(nodes)}
        data-edges={JSON.stringify(edges)}
      >
        <div id="graph-container" />
      </vis-graph>
      <small>
        Drag to pan, scroll to zoom. Click on a node to highlight it and its
        links.
      </small>
    </>
  )
}

<script>
  import type { Node, Data, Edge, Options } from 'vis-network/esnext';
  import { DataSet } from 'vis-data/esnext';
  import { Network } from 'vis-network/esnext';

  class VisGraph extends HTMLElement {
    constructor() {
      super();

      const nodes = new DataSet(
        JSON.parse(this.dataset.nodes as string) as Node[]
      );
      const edges = new DataSet<Edge>(
        JSON.parse(this.dataset.edges as string) as Edge[]
      );

      const container = this.querySelector('div')!;
      const data: Data = {
        nodes,
        edges
      };
      const options: Options = {
        nodes: {
          shape: 'box',
          color: '#2060df',
          font: {
            color: '#fff'
          }
        },
        edges: {
          color: '#4178e7'
        },
        layout: {
          hierarchical: {
            direction: 'UD',
            sortMethod: 'directed',
            nodeSpacing: 175,
            levelSeparation: 80
          }
        },
        physics: false
      };

      new Network(container, data, options);
    }
  }

  customElements.define('vis-graph', VisGraph);
</script>

<style>
  #graph-container {
    width: 100%;
    height: 600px;
    border: 1px solid gray;
    margin-bottom: 1rem;
  }
</style>
